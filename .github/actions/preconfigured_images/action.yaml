name: "Build preconfigured Docker images"
description: "Action for building preconfigured Docker images for direct use."
author: "The Dev Nolus Team <dev@nolus.io>"

inputs:
  config:
    description: "Determines the configuration to be used, targeting specific network, node and/or other other specific settings."
    required: true
  github_token:
    description: "Docker login secret."
    required: true
  docker_registry:
    description: "Docker registry used to tag the image."
    required: true
  docker_repository:
    description: "Docker repository/namespace used to tag the image."
    required: true
  docker_tag:
    description: "Docker image version tag."
    required: true

runs:
  using: composite
  steps:
    - name: "Prepare images directory"
      shell: "sh"
      run: "mkdir -p ./images/"
    - name: "Build alarms dispatcher image"
      shell: "sh"
      env:
        inputs_config: "${{ inputs.config }}"
      run: |
        docker build --rm --build-arg "config_name=${inputs_config}" \
          -f Dispatcher.Dockerfile -t "nolus-dispatcher-bot-${inputs_config}" ./artifacts/
    - name: "Save alarms dispatcher image"
      shell: "sh"
      env:
        inputs_config: "${{ inputs.config }}"
      run: |
        docker save "nolus-dispatcher-bot-${inputs_config}" > "./images/nolus-dispatcher-bot-${inputs_config}.tar"
    - name: "Archive alarms dispatcher Docker image artifact"
      uses: "actions/upload-artifact@v3"
      with:
        name: "nolus-dispatcher-bot-${{ inputs.config }}.tar"
        path: "images/nolus-dispatcher-bot-${{ inputs.config }}.tar"
    - name: "Build feeder image"
      shell: "sh"
      env:
        inputs_config: "${{ inputs.config }}"
      run: |
        docker build --rm --build-arg "config_name=${inputs_config}" \
          -f Feeder.Dockerfile -t "nolus-feeder-bot-${inputs_config}" ./artifacts/
    - name: "Save feeder image"
      shell: "sh"
      env:
        inputs_config: "${{ inputs.config }}"
      run: |
        docker save "nolus-feeder-bot-${inputs_config}" > "./images/nolus-feeder-bot-${inputs_config}.tar"
    - name: "Archive feeder Docker image artifact"
      uses: "actions/upload-artifact@v3"
      with:
        name: "nolus-feeder-bot-${{ inputs.config }}.tar"
        path: "images/nolus-feeder-bot-${{ inputs.config }}.tar"
    - name: "Docker login Nolus-Protocol"
      shell: "sh"
      env:
        inputs_github_token: "${{ inputs.github_token }}"
        inputs_docker_registry: "${{ inputs.docker_registry }}"
      run: |
        echo "${inputs_github_token}" | docker login "${inputs_docker_registry}" --username '$' --password-stdin
    - name: "Push images to Github registry"
      shell: "bash"
      env:
        inputs_config: "${{ inputs.config }}"
        inputs_docker_registry: "${{ inputs.docker_registry }}"
        inputs_docker_repository: "${{ inputs.docker_repository }}"
        inputs_docker_tag: "${{ inputs.docker_tag }}"
      run: |
        if [[ "${inputs_docker_tag}" =~ ^\d+\.\d+\.\d+$ ]]
        then
          latest_tag='latest'
        else
          latest_tag='dev'
        fi

        for app_name in 'dispatcher' 'feeder'
        do
          for image_tag in "${inputs_docker_tag}" "${latest_tag}"
          do
            docker tag "nolus-${app_name}-bot-${inputs_config}" "${inputs_docker_registry}/${inputs_docker_repository}/nolus-${app_name}-bot-${inputs_config}:${image_tag}"
            docker push "${inputs_docker_registry}/${inputs_docker_repository}/nolus-${app_name}-bot-${inputs_config}:${image_tag}"
          done
        done
